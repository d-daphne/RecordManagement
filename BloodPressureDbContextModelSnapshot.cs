// <auto-generated />
using System;
using BloodPressureMeasurementApplication.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BloodPressureMeasurementApplication.Migrations
{
    [DbContext(typeof(BloodPressureDbContext))]
    partial class BloodPressureDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BloodPressureMeasurementApplication.Entities.BloodPressure", b =>
                {
                    b.Property<int>("BPId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BPId"));

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("Diastolic")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("PositionId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Systolic")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("BPId");

                    b.HasIndex("PositionId");

                    b.ToTable("BloodPressures");

                    b.HasData(
                        new
                        {
                            BPId = 1,
                            Date = new DateTime(2024, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 80,
                            PositionId = 1,
                            Systolic = 120
                        },
                        new
                        {
                            BPId = 2,
                            Date = new DateTime(2024, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 90,
                            PositionId = 2,
                            Systolic = 110
                        },
                        new
                        {
                            BPId = 3,
                            Date = new DateTime(2024, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 80,
                            PositionId = 3,
                            Systolic = 100
                        },
                        new
                        {
                            BPId = 4,
                            Date = new DateTime(2024, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 120,
                            PositionId = 2,
                            Systolic = 90
                        },
                        new
                        {
                            BPId = 5,
                            Date = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 100,
                            PositionId = 1,
                            Systolic = 95
                        });
                });

            modelBuilder.Entity("BloodPressureMeasurementApplication.Entities.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"));

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            PositionId = 1,
                            PositionName = "Standing"
                        },
                        new
                        {
                            PositionId = 2,
                            PositionName = "Sitting"
                        },
                        new
                        {
                            PositionId = 3,
                            PositionName = "Lying down"
                        });
                });

            modelBuilder.Entity("BloodPressureMeasurementApplication.Entities.BloodPressure", b =>
                {
                    b.HasOne("BloodPressureMeasurementApplication.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
